<?php
/**
 * @file
 * Formatter to add icons to social links.
 */

/**
 * Implements hook_field_formatter_info().
 */
function facebook_follow_field_formatter_info() {
  return array(
    // The key must be unique, so it's best to prefix with your module's name.
    'facebook_follow' => array(
      // the label is is what is displayed in the select box in the UI.
      'label' => t('Facebook Follow Button formatter'),
      // List the field types your formatter is for.
      'field types' => array('link_field', 'url'),
      // You can usually leave 'multiple values' as follows:
      'multiple values' => FIELD_BEHAVIOR_DEFAULT,
      // Array of the settings we'll create.
      /*
      'settings'  => array(
        // Give a default value for when the form is first loaded.
        'icon_size' => 'medium',
      ),
      */
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function facebook_follow_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  //This gets the view_mode where our settings are stored
  $display = $instance['display'][$view_mode];
  //This gets the actual settings
  $settings = $display['settings'];

  // Initialize the element variable.
  $element = array();

  // Add your select box.
  $element['format'] = array(
    '#type'           => 'select',                // Use a select box widget
    '#title'          => t('Layout style'),        // Widget label
    '#description'    => t('Select layout style'), // Helper text
    '#default_value'  => $settings['icon_size'],   // Get the value if it's already been set
    '#options'        => array(
      'standard'  => 'Standard',
      'button_count' => 'Button Count',
      'box_count'  => 'Box count',
    ),
  );
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function facebook_follow_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  // We use t() for translation and placeholders to guard against attacks.
  $summary = t('Use a @format to change the layout of the follow button', array(
    '@format' => $settings['format'],
  ));
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 * This code just passes straight through to a theme function, MYMODULE_formatter_FORMATTER
 * (e.g. MYMODULE_formatter_MYMODULE_absolute_url).
 */
function facebook_follow_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];
  $format = $settings['format'];
  if (empty($format)) {
    $format = 'standard';
  }
  
  $sizes = array(
    'standard' => array('width' => 450, 'height' => 35),
    'button_count' => array('width' => 90, 'height' => 20),
    'button_count' => array('width' => 55, 'height' => 65),
  );

  foreach ($items as $delta => $item) {
    // Getting the actual value.
    $raw_url = isset($item['url']) ? $item['url'] : $item['value'];

    $fb = '<iframe class="facebook-follow" src="//www.facebook.com/plugins/follow?href=' . $raw_url . '&amp;layout=' . $format . '&amp;show_faces=false&amp;colorscheme=light&amp;width=450&amp;height=80" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:' . $sizes[$format]['width'] . 'px; height:' . $sizes[$format]['height'] . 'px;" allowTransparency="true"></iframe>';

      // Assign it to the #markup of the element.
    $element[$delta]['#markup'] = $fb;
  }
  return $element;
}